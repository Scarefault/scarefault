#!/bin/bash

# ---------------------------------------------------------
#                       PATHS
# ---------------------------------------------------------
RESULT_FILE="../../log/scarefault.log"
MAIN_DIR="../.."
IDENTIFY_TEST_DIR="tests/identify-test"

# ---------------------------------------------------------
#                       CONSTANTS
# ---------------------------------------------------------
CASE_TEST_FILE=$1
EXPECT_FILE="${1}.expect"
OUT_FILE="out"

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
BOLD_RED='\033[1;31m'
BOLD_GREEN='\033[1;32m'
BOLD_YELLOW='\033[1;33m'
BOLD_BLUE='\033[1;34m'
RESET='\033[0;0m'

# ---------------------------------------------------------
#                       FUNCTIONS
# ---------------------------------------------------------
write_success_message()
{
  echo -e "${iterator}\t[  ${BOLD_GREEN}OK${RESET}  ]" >> out
}

write_fail_message()
{
  echo -e "${iterator}\t[ ${BOLD_RED}FAIL${RESET} ]" >> out
  echo -e "\t\t ${BOLD_YELLOW}Expect:${YELLOW} $expect${RESET}" >> out
  echo -e "\t\t ${BOLD_YELLOW}Result:${YELLOW} $result${RESET}" >> out
}

compare_result_expect()
{
  if [ "$result" = "$expect" ]; then
    write_success_message
  else
    write_fail_message
  fi
}

increase_iterator()
{
  let iterator=iterator+1
}

create_result()
{
  if [ -e $RESULT_FILE ]; then
    rm $RESULT_FILE
  fi

  cd $MAIN_DIR
  ./scarefault < "${IDENTIFY_TEST_DIR}/${CASE_TEST_FILE}"
  cd $IDENTIFY_TEST_DIR
}

compare_line_by_line()
{
  iterator=1

  cat $RESULT_FILE | cut -f2-3 | while read result; do
    expect=$(sed "${iterator}q;d" $EXPECT_FILE)

    compare_result_expect
    increase_iterator
  done
}

print_test_result()
{
  if [ -e out ]; then
    cat out
    rm out
  else
    echo "Unable to access or remove out file..."
  fi
}

# ---------------------------------------------------------
#                         MAIN
# ---------------------------------------------------------
create_result
compare_line_by_line
print_test_result
